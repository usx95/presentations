import { SlidevParserOptions, detectFeatures$1 as detectFeatures, getDefaultConfig$1 as getDefaultConfig, parse$1 as parse, parseSlide$1 as parseSlide, parseSync$1 as parseSync, prettify$1 as prettify, prettifySlide$1 as prettifySlide, resolveConfig$1 as resolveConfig, resolveFonts$1 as resolveFonts, stringify$1 as stringify, stringifySlide$1 as stringifySlide, verifyConfig$1 as verifyConfig } from "./core-S2rX0Zs8.mjs";
import { parseAspectRatio$1 as parseAspectRatio, parseRangeString$1 as parseRangeString } from "./utils-DHlj88Gz.mjs";
import { PreparserExtensionLoader, SlidevData, SlidevMarkdown } from "@slidev/types";

//#region src/fs.d.ts
declare function injectPreparserExtensionLoader(fn: PreparserExtensionLoader): void;
/**
 * Slidev data without config and themeMeta,
 * because config and themeMeta depends on the theme to be loaded.
 */
type LoadedSlidevData = Omit<SlidevData, 'config' | 'themeMeta'>;
declare function load(userRoot: string, filepath: string, loadedSource?: Record<string, string>, mode?: string): Promise<LoadedSlidevData>;
declare function save(markdown: SlidevMarkdown): Promise<string>;

//#endregion
export { LoadedSlidevData, SlidevParserOptions, detectFeatures, getDefaultConfig, injectPreparserExtensionLoader, load, parse, parseAspectRatio, parseRangeString, parseSlide, parseSync, prettify, prettifySlide, resolveConfig, resolveFonts, save, stringify, stringifySlide, verifyConfig };